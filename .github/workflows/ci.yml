name: CI

on:
  push:
    branches: [ master, main, develop, 'feature/**' ]
  pull_request:
    branches: [ '**' ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-test:
    name: ${{ matrix.os }} â€¢ ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}
    env:
      CONAN_HOME: ${{ github.workspace }}/.conan2
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        build_type: [ Release ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Cache Conan (v2)
        uses: actions/cache@v4
        with:
          path: ${{ env.CONAN_HOME }}
          key: ${{ runner.os }}-conan2-${{ hashFiles('conanfile.*') }}
          restore-keys: |
            ${{ runner.os }}-conan2-

      - name: Install build tools (pip)
        run: |
          python -m pip install --upgrade pip
          pip install 'cmake>=3.31' 'conan>=2.2' ninja

      - name: Enable MSVC dev environment (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Detect Conan profile
        run: conan profile detect --force

      - name: Clean build directory
        shell: bash
        run: rm -rf build
      
      - name: Compute parallel jobs
        shell: bash
        run: |
          J=$(python - <<'PY'
          import multiprocessing,os
          print(min(8, max(2, multiprocessing.cpu_count())))  # cap to avoid thrashing
          PY
          )
          echo "JOBS=$J" >> "$GITHUB_ENV"
          echo "CMAKE_BUILD_PARALLEL_LEVEL=$J" >> "$GITHUB_ENV"
          echo "CONAN_CPU_COUNT=$J" >> "$GITHUB_ENV"

      - name: Conan install deps
        run: >-
          conan install .
          --build=missing
          -s build_type=${{ matrix.build_type }}
          -s compiler.cppstd=23
          -c tools.build:jobs=${{ env.JOBS }}

      - name: Configure (CMake)
        run: >-
          cmake -S . -B build
          -DCMAKE_TOOLCHAIN_FILE="build/generators/conan_toolchain.cmake"
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }} --parallel

      - name: Test
        run: ctest --test-dir build -C ${{ matrix.build_type }} --output-on-failure

      - name: Upload test logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ runner.os }}
          path: |
            build/Testing/**/*
            build/**/LastTest.log
            build/**/Testing/Temporary/LastTest.log
          if-no-files-found: ignore

      - name: Upload executables
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ runner.os }}
          path: |
            build/*.exe
            build/Poker
            build/Poker_Game
            build/Poker_Benchmark
          if-no-files-found: ignore
